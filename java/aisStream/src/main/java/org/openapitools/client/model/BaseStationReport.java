/*
 * Ais-Stream WebsocketObjects
 * OpenAPI 3.0 definitions for the data models used by aisstream.io.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BaseStationReport
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-27T20:06:28.639799-05:00[America/Toronto]")
public class BaseStationReport {
  public static final String SERIALIZED_NAME_MESSAGE_I_D = "MessageID";
  @SerializedName(SERIALIZED_NAME_MESSAGE_I_D)
  private Integer messageID;

  public static final String SERIALIZED_NAME_REPEAT_INDICATOR = "RepeatIndicator";
  @SerializedName(SERIALIZED_NAME_REPEAT_INDICATOR)
  private Integer repeatIndicator;

  public static final String SERIALIZED_NAME_USER_I_D = "UserID";
  @SerializedName(SERIALIZED_NAME_USER_I_D)
  private Integer userID;

  public static final String SERIALIZED_NAME_VALID = "Valid";
  @SerializedName(SERIALIZED_NAME_VALID)
  private Boolean valid;

  public static final String SERIALIZED_NAME_UTC_YEAR = "UtcYear";
  @SerializedName(SERIALIZED_NAME_UTC_YEAR)
  private Integer utcYear;

  public static final String SERIALIZED_NAME_UTC_MONTH = "UtcMonth";
  @SerializedName(SERIALIZED_NAME_UTC_MONTH)
  private Integer utcMonth;

  public static final String SERIALIZED_NAME_UTC_DAY = "UtcDay";
  @SerializedName(SERIALIZED_NAME_UTC_DAY)
  private Integer utcDay;

  public static final String SERIALIZED_NAME_UTC_HOUR = "UtcHour";
  @SerializedName(SERIALIZED_NAME_UTC_HOUR)
  private Integer utcHour;

  public static final String SERIALIZED_NAME_UTC_MINUTE = "UtcMinute";
  @SerializedName(SERIALIZED_NAME_UTC_MINUTE)
  private Integer utcMinute;

  public static final String SERIALIZED_NAME_UTC_SECOND = "UtcSecond";
  @SerializedName(SERIALIZED_NAME_UTC_SECOND)
  private Integer utcSecond;

  public static final String SERIALIZED_NAME_POSITION_ACCURACY = "PositionAccuracy";
  @SerializedName(SERIALIZED_NAME_POSITION_ACCURACY)
  private Boolean positionAccuracy;

  public static final String SERIALIZED_NAME_LONGITUDE = "Longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private Double longitude;

  public static final String SERIALIZED_NAME_LATITUDE = "Latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private Double latitude;

  public static final String SERIALIZED_NAME_FIX_TYPE = "FixType";
  @SerializedName(SERIALIZED_NAME_FIX_TYPE)
  private Integer fixType;

  public static final String SERIALIZED_NAME_LONG_RANGE_ENABLE = "LongRangeEnable";
  @SerializedName(SERIALIZED_NAME_LONG_RANGE_ENABLE)
  private Boolean longRangeEnable;

  public static final String SERIALIZED_NAME_SPARE = "Spare";
  @SerializedName(SERIALIZED_NAME_SPARE)
  private Integer spare;

  public static final String SERIALIZED_NAME_RAIM = "Raim";
  @SerializedName(SERIALIZED_NAME_RAIM)
  private Boolean raim;

  public static final String SERIALIZED_NAME_COMMUNICATION_STATE = "CommunicationState";
  @SerializedName(SERIALIZED_NAME_COMMUNICATION_STATE)
  private Integer communicationState;

  public BaseStationReport() { 
  }

  public BaseStationReport messageID(Integer messageID) {
    
    this.messageID = messageID;
    return this;
  }

   /**
   * Get messageID
   * @return messageID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getMessageID() {
    return messageID;
  }


  public void setMessageID(Integer messageID) {
    this.messageID = messageID;
  }


  public BaseStationReport repeatIndicator(Integer repeatIndicator) {
    
    this.repeatIndicator = repeatIndicator;
    return this;
  }

   /**
   * Get repeatIndicator
   * @return repeatIndicator
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getRepeatIndicator() {
    return repeatIndicator;
  }


  public void setRepeatIndicator(Integer repeatIndicator) {
    this.repeatIndicator = repeatIndicator;
  }


  public BaseStationReport userID(Integer userID) {
    
    this.userID = userID;
    return this;
  }

   /**
   * Get userID
   * @return userID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getUserID() {
    return userID;
  }


  public void setUserID(Integer userID) {
    this.userID = userID;
  }


  public BaseStationReport valid(Boolean valid) {
    
    this.valid = valid;
    return this;
  }

   /**
   * Get valid
   * @return valid
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getValid() {
    return valid;
  }


  public void setValid(Boolean valid) {
    this.valid = valid;
  }


  public BaseStationReport utcYear(Integer utcYear) {
    
    this.utcYear = utcYear;
    return this;
  }

   /**
   * Get utcYear
   * @return utcYear
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getUtcYear() {
    return utcYear;
  }


  public void setUtcYear(Integer utcYear) {
    this.utcYear = utcYear;
  }


  public BaseStationReport utcMonth(Integer utcMonth) {
    
    this.utcMonth = utcMonth;
    return this;
  }

   /**
   * Get utcMonth
   * @return utcMonth
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getUtcMonth() {
    return utcMonth;
  }


  public void setUtcMonth(Integer utcMonth) {
    this.utcMonth = utcMonth;
  }


  public BaseStationReport utcDay(Integer utcDay) {
    
    this.utcDay = utcDay;
    return this;
  }

   /**
   * Get utcDay
   * @return utcDay
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getUtcDay() {
    return utcDay;
  }


  public void setUtcDay(Integer utcDay) {
    this.utcDay = utcDay;
  }


  public BaseStationReport utcHour(Integer utcHour) {
    
    this.utcHour = utcHour;
    return this;
  }

   /**
   * Get utcHour
   * @return utcHour
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getUtcHour() {
    return utcHour;
  }


  public void setUtcHour(Integer utcHour) {
    this.utcHour = utcHour;
  }


  public BaseStationReport utcMinute(Integer utcMinute) {
    
    this.utcMinute = utcMinute;
    return this;
  }

   /**
   * Get utcMinute
   * @return utcMinute
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getUtcMinute() {
    return utcMinute;
  }


  public void setUtcMinute(Integer utcMinute) {
    this.utcMinute = utcMinute;
  }


  public BaseStationReport utcSecond(Integer utcSecond) {
    
    this.utcSecond = utcSecond;
    return this;
  }

   /**
   * Get utcSecond
   * @return utcSecond
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getUtcSecond() {
    return utcSecond;
  }


  public void setUtcSecond(Integer utcSecond) {
    this.utcSecond = utcSecond;
  }


  public BaseStationReport positionAccuracy(Boolean positionAccuracy) {
    
    this.positionAccuracy = positionAccuracy;
    return this;
  }

   /**
   * Get positionAccuracy
   * @return positionAccuracy
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getPositionAccuracy() {
    return positionAccuracy;
  }


  public void setPositionAccuracy(Boolean positionAccuracy) {
    this.positionAccuracy = positionAccuracy;
  }


  public BaseStationReport longitude(Double longitude) {
    
    this.longitude = longitude;
    return this;
  }

   /**
   * Get longitude
   * @return longitude
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getLongitude() {
    return longitude;
  }


  public void setLongitude(Double longitude) {
    this.longitude = longitude;
  }


  public BaseStationReport latitude(Double latitude) {
    
    this.latitude = latitude;
    return this;
  }

   /**
   * Get latitude
   * @return latitude
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getLatitude() {
    return latitude;
  }


  public void setLatitude(Double latitude) {
    this.latitude = latitude;
  }


  public BaseStationReport fixType(Integer fixType) {
    
    this.fixType = fixType;
    return this;
  }

   /**
   * Get fixType
   * @return fixType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getFixType() {
    return fixType;
  }


  public void setFixType(Integer fixType) {
    this.fixType = fixType;
  }


  public BaseStationReport longRangeEnable(Boolean longRangeEnable) {
    
    this.longRangeEnable = longRangeEnable;
    return this;
  }

   /**
   * Get longRangeEnable
   * @return longRangeEnable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getLongRangeEnable() {
    return longRangeEnable;
  }


  public void setLongRangeEnable(Boolean longRangeEnable) {
    this.longRangeEnable = longRangeEnable;
  }


  public BaseStationReport spare(Integer spare) {
    
    this.spare = spare;
    return this;
  }

   /**
   * Get spare
   * @return spare
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getSpare() {
    return spare;
  }


  public void setSpare(Integer spare) {
    this.spare = spare;
  }


  public BaseStationReport raim(Boolean raim) {
    
    this.raim = raim;
    return this;
  }

   /**
   * Get raim
   * @return raim
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getRaim() {
    return raim;
  }


  public void setRaim(Boolean raim) {
    this.raim = raim;
  }


  public BaseStationReport communicationState(Integer communicationState) {
    
    this.communicationState = communicationState;
    return this;
  }

   /**
   * Get communicationState
   * @return communicationState
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getCommunicationState() {
    return communicationState;
  }


  public void setCommunicationState(Integer communicationState) {
    this.communicationState = communicationState;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseStationReport baseStationReport = (BaseStationReport) o;
    return Objects.equals(this.messageID, baseStationReport.messageID) &&
        Objects.equals(this.repeatIndicator, baseStationReport.repeatIndicator) &&
        Objects.equals(this.userID, baseStationReport.userID) &&
        Objects.equals(this.valid, baseStationReport.valid) &&
        Objects.equals(this.utcYear, baseStationReport.utcYear) &&
        Objects.equals(this.utcMonth, baseStationReport.utcMonth) &&
        Objects.equals(this.utcDay, baseStationReport.utcDay) &&
        Objects.equals(this.utcHour, baseStationReport.utcHour) &&
        Objects.equals(this.utcMinute, baseStationReport.utcMinute) &&
        Objects.equals(this.utcSecond, baseStationReport.utcSecond) &&
        Objects.equals(this.positionAccuracy, baseStationReport.positionAccuracy) &&
        Objects.equals(this.longitude, baseStationReport.longitude) &&
        Objects.equals(this.latitude, baseStationReport.latitude) &&
        Objects.equals(this.fixType, baseStationReport.fixType) &&
        Objects.equals(this.longRangeEnable, baseStationReport.longRangeEnable) &&
        Objects.equals(this.spare, baseStationReport.spare) &&
        Objects.equals(this.raim, baseStationReport.raim) &&
        Objects.equals(this.communicationState, baseStationReport.communicationState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageID, repeatIndicator, userID, valid, utcYear, utcMonth, utcDay, utcHour, utcMinute, utcSecond, positionAccuracy, longitude, latitude, fixType, longRangeEnable, spare, raim, communicationState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseStationReport {\n");
    sb.append("    messageID: ").append(toIndentedString(messageID)).append("\n");
    sb.append("    repeatIndicator: ").append(toIndentedString(repeatIndicator)).append("\n");
    sb.append("    userID: ").append(toIndentedString(userID)).append("\n");
    sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
    sb.append("    utcYear: ").append(toIndentedString(utcYear)).append("\n");
    sb.append("    utcMonth: ").append(toIndentedString(utcMonth)).append("\n");
    sb.append("    utcDay: ").append(toIndentedString(utcDay)).append("\n");
    sb.append("    utcHour: ").append(toIndentedString(utcHour)).append("\n");
    sb.append("    utcMinute: ").append(toIndentedString(utcMinute)).append("\n");
    sb.append("    utcSecond: ").append(toIndentedString(utcSecond)).append("\n");
    sb.append("    positionAccuracy: ").append(toIndentedString(positionAccuracy)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    fixType: ").append(toIndentedString(fixType)).append("\n");
    sb.append("    longRangeEnable: ").append(toIndentedString(longRangeEnable)).append("\n");
    sb.append("    spare: ").append(toIndentedString(spare)).append("\n");
    sb.append("    raim: ").append(toIndentedString(raim)).append("\n");
    sb.append("    communicationState: ").append(toIndentedString(communicationState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MessageID");
    openapiFields.add("RepeatIndicator");
    openapiFields.add("UserID");
    openapiFields.add("Valid");
    openapiFields.add("UtcYear");
    openapiFields.add("UtcMonth");
    openapiFields.add("UtcDay");
    openapiFields.add("UtcHour");
    openapiFields.add("UtcMinute");
    openapiFields.add("UtcSecond");
    openapiFields.add("PositionAccuracy");
    openapiFields.add("Longitude");
    openapiFields.add("Latitude");
    openapiFields.add("FixType");
    openapiFields.add("LongRangeEnable");
    openapiFields.add("Spare");
    openapiFields.add("Raim");
    openapiFields.add("CommunicationState");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("MessageID");
    openapiRequiredFields.add("RepeatIndicator");
    openapiRequiredFields.add("UserID");
    openapiRequiredFields.add("Valid");
    openapiRequiredFields.add("UtcYear");
    openapiRequiredFields.add("UtcMonth");
    openapiRequiredFields.add("UtcDay");
    openapiRequiredFields.add("UtcHour");
    openapiRequiredFields.add("UtcMinute");
    openapiRequiredFields.add("UtcSecond");
    openapiRequiredFields.add("PositionAccuracy");
    openapiRequiredFields.add("Longitude");
    openapiRequiredFields.add("Latitude");
    openapiRequiredFields.add("FixType");
    openapiRequiredFields.add("LongRangeEnable");
    openapiRequiredFields.add("Spare");
    openapiRequiredFields.add("Raim");
    openapiRequiredFields.add("CommunicationState");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to BaseStationReport
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (BaseStationReport.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in BaseStationReport is not found in the empty JSON string", BaseStationReport.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!BaseStationReport.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BaseStationReport` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BaseStationReport.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BaseStationReport.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BaseStationReport' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BaseStationReport> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BaseStationReport.class));

       return (TypeAdapter<T>) new TypeAdapter<BaseStationReport>() {
           @Override
           public void write(JsonWriter out, BaseStationReport value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BaseStationReport read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BaseStationReport given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BaseStationReport
  * @throws IOException if the JSON string is invalid with respect to BaseStationReport
  */
  public static BaseStationReport fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BaseStationReport.class);
  }

 /**
  * Convert an instance of BaseStationReport to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

